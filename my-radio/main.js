!function(){"use strict";const t=(t,e)=>{t&&Object.keys(t).forEach(s=>e.setAttribute(s,`${t[s]}`))},e=(t,e)=>{e&&e.appendChild(t)},s=document,i=(i,a=null,n=null)=>{const r=s.createElement(i);return t(n,r),e(r,a),r},a=(i,a=null,n=null)=>{const r=s.createElementNS("http://www.w3.org/2000/svg",i);return t(n,r),e(r,a),r},n=(t,e)=>{let s=t;for(const t of e.split("."))if(!(s=s[t]))return null;return s},r=t=>e=>{if(!e)return null;let s=n(e,t.artist),i=n(e,t.song);if(!s||!i){const a=n(e,t.alt),r=(a||"").split(" - ");[s,i]=2===r.length?r:[a,null]}return{artist:s,song:i}};class o{constructor(){this.onLoad=(t=>this.onLoadAction=t),this.get=(t=>fetch(`${t.url}?t=${Date.now()}`).then(t=>t.json()).then(r(t)).catch(t=>null))}stop(){this.timer&&(clearTimeout(this.timer),this.timer=null)}async start(t){this.stop(),await this.load(t)}async load(t){let e=this.timer;const s=await this.get(t)||{artist:null,song:null};e&&e!==this.timer||(this.onLoadAction(s,t.url),this.timer=e=setTimeout(()=>this.load(t),4e3))}}const h="player_state_changed",l="player_metadata_changed";class c{constructor(t,e,s){this.audioElement=t,this.stations=e,this.metadataLoader=s,this.current=null,this.playing=!1,this.metadata={},this.metadataMap={},this.onStateChanged=(t=>this.subscribe(h,t)),this.onMetadataChanged=(t=>this.subscribe(l,t)),t.addEventListener("pause",()=>this.pauseInternal()),t.addEventListener("play",()=>this.playInternal()),e.map((t,e)=>{t.title&&(this.metadataMap[t.title.url]=e)}),s.onLoad((t,e)=>this.updateMetadata(t,e))}play(t){this.playing&&this.audioElement.pause(),this.current!==t&&(this.audioElement.src=this.stations[t].url,this.current=t),this.audioElement.load(),this.audioElement.play()}stop(){this.audioElement.pause()}toggle(t){console.log("toggle",this.current,t),this.playing&&this.current===t?this.stop():this.play(t)}playInternal(){this.playing=!0;const{current:t,playing:e}=this,s=this.stations[t].title;s?this.metadataLoader.start(s):this.metadataLoader.stop(),this.notice(h,{current:t,playing:e})}pauseInternal(){this.playing=!1,this.metadataLoader.stop();const{current:t,playing:e}=this;this.notice(h,{current:t,playing:e})}updateMetadata(t,e){this.metadata=Object.assign({},this.metadata,{[this.metadataMap[e]]:t}),this.notice(l,this.metadata)}subscribe(t,e){this.audioElement.addEventListener(t,t=>e(t.detail))}notice(t,e=null){const s=new CustomEvent(t,{detail:e});this.audioElement.dispatchEvent(s)}}const u=128;class d{constructor(t){this.audio=t,this.onChangeActions=[],this.onChange=(t=>this.onChangeActions.push(t))}init(){if(this.analyser)return;const t=new AudioContext,e=t.createMediaElementSource(this.audio),s=t.createAnalyser();this.analyser=s,e.connect(s),s.connect(t.destination),s.fftSize=u;const i=s.frequencyBinCount;this.data=new Uint8Array(i),this.requestData()}requestData(){this.analyser.getByteFrequencyData(this.data),this.onChangeActions.forEach(t=>t(this.data)),requestAnimationFrame(this.requestData.bind(this))}}const p="list",m="station",y="title",g="song",f="artist",w="equalizer-container",C="equalizer",v="active",q="a",E="audio",L="div",b="li",M="span",A="svg",I="ul";class z{constructor(t){this.audio=i(E,null,{crossorigin:"anonymous"}),this.equalizerContainer=i(L,null,{class:w}),this.equalizer=a(A,null,{class:C}),this.list=i(I,null,{class:p}),this.ids=[],this.items={},this.meta={},this.onItemClick=(()=>{}),t.forEach((t,e)=>this.list.appendChild(this.createItem(t,e))),this.equalizerContainer.appendChild(this.equalizer)}render(t){t.appendChild(this.audio),t.appendChild(this.equalizerContainer),t.appendChild(this.list)}onToggle(t){this.onItemClick=t}setState({current:t,playing:e}){this.ids.forEach(s=>{const i=this.items[s];e&&t===s?i.classList.add(v):i.classList.remove(v)})}setMetadata(t){this.ids.forEach(e=>{const s=t[e]||{},i=this.meta[e];this.setMeta(i.song,s.song),this.setMeta(i.artist,s.artist)})}setMeta(t,e){e?t.classList.add(v):t.classList.remove(v),t.textContent=e}createItem(t,e){const s=i(b),a=i(q,s),n=i(M,a,{class:m}),r=i(M,a,{class:y}),o=i(M,r,{class:g}),h=i(M,r,{class:f});return n.textContent=t.name,this.ids.push(e),this.items[e]=s,this.meta[e]={song:o,artist:h},a.addEventListener("click",()=>this.onItemClick(e)),s}}const k="line",S=28;class ${constructor(t,e){this.svg=t,this.frequencyProvider=e,this.frequencies=Array(S).fill(0).map((e,s)=>this.addFrequencyItem(t,s)),this.frequencyProvider.onChange(this.update.bind(this))}addFrequencyItem(t,e){const s=11*e+6;return a(k,t,{class:"frequency",x1:s,y1:2,x2:s,y2:62,"stroke-dasharray":"0 60","stroke-dashoffset":-30})}update(t){const e=this.frequencies;for(let s=0;s<S;s++){const i=60*Math.pow((t[2*s]+t[2*s+1])/510,3),a=60-i,n=e[s];n.setAttribute("stroke-dasharray",`${i} ${a}`),n.setAttribute("stroke-dashoffset",`${-a/2}`)}}}class j{constructor(t,e){this.container=t,this.view=new z(e);const s=new o;this.player=new c(this.view.audio,e,s),this.frequencyProvider=new d(this.view.audio),this.equalizer=new $(this.view.equalizer,this.frequencyProvider)}init(){this.view.render(this.container),this.view.onToggle(t=>this.player.toggle(t)),this.player.onStateChanged(t=>this.view.setState(t)),this.player.onStateChanged(t=>this.frequencyProvider.init()),this.player.onMetadataChanged(t=>this.view.setMetadata(t))}}(async()=>{const{stations:t}=await(async()=>{const t=await fetch("data.json");return await t.json()})();new j(s.body,t).init()})()}();