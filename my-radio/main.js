!function(){"use strict";const t=(t,s)=>{t&&Object.keys(t).forEach(e=>s.setAttribute(e,`${t[e]}`))},s=(t,s)=>{s&&s.appendChild(t)},e=document,i=(i,a=null,n=null)=>{const r=e.createElement(i);return t(n,r),s(r,a),r},a=(i,a=null,n=null)=>{const r=e.createElementNS("http://www.w3.org/2000/svg",i);return t(n,r),s(r,a),r},n=(t,s)=>{let e=t;for(const t of s.split("."))if(!(e=e[t]))return null;return e},r=t=>s=>{if(!s)return null;let e=n(s,t.artist),i=n(s,t.song);if(!e||!i){const a=n(s,t.alt),r=(a||"").split(" - ");[e,i]=2===r.length?r:[a,null]}return{artist:e,song:i}};class h{constructor(){this.onLoad=(t=>this.onLoadAction=t),this.get=(t=>fetch(t.url).then(t=>t.json()).then(r(t)).catch(t=>null))}stop(){this.timer&&(clearTimeout(this.timer),this.timer=null)}async start(t){this.stop(),await this.load(t)}async load(t){let s=this.timer;const e=await this.get(t)||{artist:null,song:null};s&&s!==this.timer||(this.onLoadAction(e,t.url),this.timer=s=setTimeout(()=>this.load(t),4e3))}}const o="player_state_changed",l="player_metadata_changed";class c{constructor(t,s,e){this.audioElement=t,this.stations=s,this.metadataLoader=e,this.current=0,this.playing=!1,this.metadata={},this.metadataMap={},this.onStateChanged=(t=>this.subscribe(o,t)),this.onMetadataChanged=(t=>this.subscribe(l,t)),t.addEventListener("pause",()=>this.pauseInternal()),t.addEventListener("play",()=>this.playInternal()),s.map((t,s)=>{t.title&&(this.metadataMap[t.title.url]=s)}),e.onLoad((t,s)=>this.updateMetadata(t,s))}play(t){this.playing&&this.audioElement.pause(),this.current!==t&&(this.audioElement.src=this.stations[t].url,this.current=t),this.audioElement.load(),this.audioElement.play()}stop(){this.audioElement.pause()}toggle(t){this.playing&&this.current===t?this.stop():this.play(t)}playInternal(){this.playing=!0;const t=this.stations[this.current].title;t?this.metadataLoader.start(t):this.metadataLoader.stop(),this.notice(o,{current:this.current,playing:this.playing})}pauseInternal(){this.playing=!1,this.metadataLoader.stop(),this.notice(o,{current:this.current,playing:this.playing})}updateMetadata(t,s){const e=Object.assign({},this.metadata);e[this.metadataMap[s]]=t,this.metadata=e,this.notice(l,this.metadata)}subscribe(t,s){this.audioElement.addEventListener(t,t=>s(t.detail))}notice(t,s=null){const e=new CustomEvent(t,{detail:s});this.audioElement.dispatchEvent(e)}}const d=128;class u{constructor(t){this.audio=t,this.onChangeActions=[],this.onChange=(t=>this.onChangeActions.push(t))}init(){if(this.analyser)return;const t=new AudioContext,s=t.createMediaElementSource(this.audio),e=t.createAnalyser();this.analyser=e,s.connect(e),e.connect(t.destination),e.fftSize=d;const i=e.frequencyBinCount;this.data=new Uint8Array(i),this.requestData()}requestData(){this.analyser.getByteFrequencyData(this.data),this.onChangeActions.forEach(t=>t(this.data)),requestAnimationFrame(this.requestData.bind(this))}}const p="list",m="station",y="title",g="song",f="artist",w="equalizer",v="active",C="a",E="audio",q="li",L="span",b="svg",M="ul";class A{constructor(t){this.audio=i(E,null,{crossorigin:"anonymous"}),this.equalizer=a(b,null,{class:w}),this.list=i(M,null,{class:p}),this.ids=[],this.items={},this.meta={},this.onItemClick=(()=>{}),t.forEach((t,s)=>this.list.appendChild(this.createItem(t,s)))}render(t){t.appendChild(this.audio),t.appendChild(this.equalizer),t.appendChild(this.list)}onToggle(t){this.onItemClick=t}setState({current:t,playing:s}){this.ids.forEach(e=>{const i=this.items[e];s&&t===e?i.classList.add(v):i.classList.remove(v)})}setMetadata(t){this.ids.forEach(s=>{const e=t[s]||{},i=this.meta[s];this.setMeta(i.song,e.song),this.setMeta(i.artist,e.artist)})}setMeta(t,s){s?t.classList.add(v):t.classList.remove(v),t.textContent=s}createItem(t,s){const e=i(q),a=i(C,e),n=i(L,a,{class:m}),r=i(L,a,{class:y}),h=i(L,r,{class:g}),o=i(L,r,{class:f});return n.textContent=t.name,this.ids.push(s),this.items[s]=e,this.meta[s]={song:h,artist:o},a.addEventListener("click",()=>this.onItemClick(s)),e}}const I="line",k=28;class S{constructor(t,s){this.svg=t,this.frequencyProvider=s,this.frequencies=Array(k).fill(0).map((s,e)=>this.addFrequencyItem(t,e)),this.frequencyProvider.onChange(this.update.bind(this))}addFrequencyItem(t,s){const e=11*s+6;return a(I,t,{class:"frequency",x1:e,y1:2,x2:e,y2:62,"stroke-dasharray":"0 60","stroke-dashoffset":-30})}update(t){const s=this.frequencies;for(let e=0;e<k;e++){const i=60*Math.pow((t[2*e]+t[2*e+1])/510,3),a=60-i,n=s[e];n.setAttribute("stroke-dasharray",`${i} ${a}`),n.setAttribute("stroke-dashoffset",`${-a/2}`)}}}class z{constructor(t,s){this.container=t,this.stations=s,this.view=new A(s);const e=new h;this.player=new c(this.view.audio,s,e),this.frequencyProvider=new u(this.view.audio),this.equalizer=new S(this.view.equalizer,this.frequencyProvider)}init(){this.view.render(this.container),this.view.onToggle(t=>this.player.toggle(t)),this.player.onStateChanged(t=>this.view.setState(t)),this.player.onStateChanged(t=>this.frequencyProvider.init()),this.player.onMetadataChanged(t=>this.view.setMetadata(t))}}(async()=>{const{stations:t}=await(async()=>{const t=await fetch("data.json");return await t.json()})();new z(e.body,t).init()})()}();